#!/usr/bin/env python3
import rospy
import rospkg
from std_msgs.msg import Float32MultiArray
from std_msgs.msg import Int16MultiArray
from std_msgs.msg import String
from camera.cam import Camera
import numpy as np

class CameraNode(object):

    def __init__(self):
        rospack = rospkg.RosPack()
        self.camera = Camera(rospack.get_path("camera"))
        topics = rospy.get_param("/topics")

        self.cam_pub = rospy.Publisher(topics["cam"], String, queue_size=5)
        rospy.Subscriber(topics["is_on"], Int16MultiArray, self.mux_callback)

        self.is_looking = True  # default False
        
        msg = Int16MultiArray()
        while self.is_looking and not rospy.is_shutdown():
            msg.data = self.camera.detect_object()[0]
            # data fed as xyxy[0][i], 2 pairs of xy coordinates
            # xy coordinates relative to image
            # pair 1 is the end of the handle, pair 2 is the knob
            self.cam_pub.publish(msg.data)

    def mux_callback(self, data):
        self.is_looking = data.data[1]

if __name__ == "__main__":
    rospy.init_node("camera_node")

    camera_node = CameraNode()

    rospy.loginfo("Camera node started")
    rospy.spin()