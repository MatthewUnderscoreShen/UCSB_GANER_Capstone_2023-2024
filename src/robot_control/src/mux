#!/ubuntu/bin/env python
import rospy
import numpy as np
import time
from std_msgs.msg import String
from std_msgs.msg import Int16MultiArray
from std_msgs.msg import Float32MultiArray

class Mux(object):

    def __init__(self):
        topics = rospy.get_param("/topics")
        self.drive_pub = rospy.Publisher(topics["drive_in"], String, queue_size=10)
        self.arm_pub = rospy.Publisher(topics["arm_in"], Float32MultiArray, queue_size=10)
        self.is_pub = rospy.Publisher(topics["is_on"], Int16MultiArray, queue_size=10)
        rospy.Subscriber("/current_task", String, self.task_callback)
        # is_this_on : [is_teleop, is_camera_looking, ]

        self.commands = {"Teleop": {"func": "msg",
                                    "content": {"pub": self.is_pub, "type": Int16MultiArray(), "data": [1,0]}},
                         "Auto": {"func": "msg", 
                                  "content": {"pub": self.is_pub, "type": Int16MultiArray(), "data": [0,0]}},
                         "Upstairs": {"func": "sequence", 
                                      "content": {"pub": self.is_pub, "type": Int16MultiArray(), 
                                                  "data": [""]}},
                        }

    def task_callback(self, data):
        stuff = self.commands[data.data]
        self.pub_msg(stuff["pub"], stuff["type"], stuff["data"])
    
    def pub_msg(self, pub, type, data):
        msg = type
        msg.data = data
        pub.publish(msg)


if __name__ == '__main__':
    rospy.init_node("mux")

    mux = Mux()

    rospy.loginfo("Mux node started")
    rospy.spin()