#!/usr/bin/env python3
import rospy
import numpy as np
from std_msgs.msg import String
from sensor_msgs.msg import Joy

class TaskNode(object):

    def __init__(self):
        topics = rospy.get_param("/topics")
        self.task_pub = rospy.Publisher(topics["task"], String, queue_size=10)
        rospy.Subscriber(topics["joy"], Joy, self.joy_callback)
        self.btn_2_msg = ["0","Open Latch","2","3","4","5","6","7","Auto","Teleop","Test P","Test L","Test R"]
        self.last_pressed = [0 for _ in range(len(self.btn_2_msg))]


    # Publishes message corresponding to the button pressed
    def joy_callback(self, data):
        for i in range(len(self.btn_2_msg)):
            if data.buttons[i] and not self.last_pressed[i]:
                # if button is pressed and wasn't pressed before
                # publish corresponding command
                self.task_pub.publish(String(self.btn_2_msg[i]))
        self.last_pressed = data.buttons

    # Function that finds which button is pressed
    def find_pressed(axes):
        for i in range(len(axes)):
            if axes[i] > 0.0:
                return i
        return 13   # 13th task is no task

if __name__ == "__main__":
    rospy.init_node("test_task_sender")

    task_node = TaskNode()

    rospy.spin()